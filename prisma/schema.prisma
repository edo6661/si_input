generator client {
  provider = "prisma-client-js"
}

// ! ini itu buat nge integrasikan aplikasi nya dengan database, disitu provider nya itu cockroach db, tapi default cockroach db itu memakai posgresql
// ! postgresql://wafy:kimq5WQ2bV0M2lQPmcvOug@drag-drop-8710.8nk.gcp-asia-southeast1.cockroachlabs.cloud:26257/si_input?sslmode=verify-full
datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid())
  username  String
  externalUserId String @unique
  role Role @default(USER)
  profilePhoto String 
  instanceId String?

  instance Instance? @relation(fields: [instanceId], references: [id])

  data Data[] @relation("createdBy")
  updatingData Data[] @relation("updatedBy")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([instanceId])
}

enum Role {
  USER
  ADMIN
}

model Data {
  id     String @id @default(uuid())
  nama    String 
  data    String
  
  userId String
  adminId String?
  categoryId String
  instanceId String
  releaseId String

  category Category @relation(fields: [categoryId], references: [id])
  instance Instance @relation(fields: [instanceId], references: [id])
  release Release @relation(fields: [releaseId], references: [id])

  updatedBy User? @relation("updatedBy", fields: [adminId], references: [id])
  createdBy User @relation("createdBy", fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id    String @id @default(uuid())
  nama  String 
  data  Data[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Instance {
  id    String @id @default(uuid())
  nama  String

  user User?
  data Data[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Release {
  id    String @id @default(uuid())
  nama  String
  data  Data[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}





